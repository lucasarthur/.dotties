#!/bin/sh

function usage {
  echo "usage: touchx [-s|--shebang] [-ns|--no-shebang] [-i|--interpreter <interpreter>] [-o|--open] [-no|--no-open] [-e|--editor <editor>] [-nc|--no-confirm] <file?>"
}

function version {
  echo "touchx - v0.1.0"
}

shebang=true
open=true
confirm=true
interpreter="/bin/sh"
editor=$EDITOR
file=$(uuidgen | tr -d '-')

while (( $# > 0 )); do
  case "$1" in
    -h|--help)
      usage
      exit 0;;
    -v|--version)
      version
      exit 0;;
    -s|--shebang)
      shebang=true
      shift;;
    -ns|--no-shebang)
      shebang=false
      shift;;
    -o|--open)
      open=true
      shift;;
    -no|--no-open)
      open=false
      shift;;
    -i|--interpreter)
      interpreter="$2"
      shebang=true
      shift 2;;
    -e|--editor)
      editor="$2"
      open=true
      shift 2;;
    -nc|--no-confirm)
      confirm=false
      shift;;
    *)
      file="$1"
      shift;;
  esac
done

if [[ -e "$file" ]]; then
  echo "touchx: file '$file' already exists"

  if [[ "$confirm" = false ]]; then
    echo "touchx: won't prompt for confirmation"
    echo "touchx: overwriting file '$file'"
    rm "$file"
  else
    read -p "do you want to overwrite it? [y/N] > " choice
    choice=$(echo "$choice" | tr '[:upper:]' '[:lower:]')

    case "$choice" in
      y|yes)
        echo "touchx: ok, overwriting file '$file'"
        rm "$file";;
      n|no|"")
        echo "touchx: ok, aborting"
        exit 1;;
      *)
        echo "touchx: invalid choice '$choice', aborting"
        exit 1;;
    esac
  fi
fi

touch "$file"

if [[ "$shebang" = true ]]; then
  echo -e "#!$interpreter\n" > "$file"
fi

chmod +x "$file"

if [[ "$open" = true ]]; then
  $editor "$file"
fi
